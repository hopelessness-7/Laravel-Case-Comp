{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel API Documentation TEST USER",
        "description": "API routes for building the client part",
        "contact": {
            "name": "Egor Titow"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api/"
        }
    ],
    "paths": {
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "We output all users through a collection of resources",
                "description": "We output all users through a collection of resources",
                "operationId": "Withdrawal of all users",
                "responses": {
                    "200": {
                        "description": "All users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "readOnly": "true",
                                            "example": "The request was successfully completed - Users were received."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "readOnly": "true",
                                            "example": "200"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Store user in DB",
                "description": "Store user in DB",
                "operationId": "Create user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Name"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "name@email.ru"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "readOnly": "true",
                                            "example": "The request was successfully completed - User were received."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "readOnly": "true",
                                            "example": "200"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "request error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "readOnly": "true",
                                            "example": "Conflict when adding data to the database"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "readOnly": "true",
                                            "example": "409"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Display the specified resource",
                "description": "Get User Detail",
                "operationId": "User output by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of User",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "readOnly": "true",
                                            "example": "The request was successfully completed - User were received."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "readOnly": "true",
                                            "example": "200"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "readOnly": "true",
                                            "example": "User not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "readOnly": "true",
                                            "example": "200"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update the specified resource in storage.",
                "description": "Update the specified resource in storage.",
                "operationId": "Update user",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "path",
                        "description": "email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "path",
                        "description": "password",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User show item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "readOnly": "true",
                                            "example": "The request was successfully completed - User were received."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "readOnly": "true",
                                            "example": "200"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "readOnly": "true",
                                            "example": "User not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "readOnly": "true",
                                            "example": "200"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Remove the specified resource from storage.",
                "description": "Remove the specified resource from storage",
                "operationId": "Delete user",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of User",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User show item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "readOnly": "true",
                                            "example": "The request was successfully completed - the User was deleted"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "readOnly": "true",
                                            "example": "200"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "readOnly": "true",
                                            "example": "User not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "readOnly": "true",
                                            "example": "200"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Name Name Name"
                    },
                    "email": {
                        "type": "string",
                        "example": "email@test.ru"
                    },
                    "password": {
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        }
    }
}